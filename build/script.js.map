{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/rabbit-lyrics/dist/rabbit-lyrics.esm.js","webpack:///./src/script.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uDAAuD;;AAEvD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,sBAAsB;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc;;AAEd;;AAEA;AACA;AACA,GAAG;;;AAGH;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;AACA,wCAAwC;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iBAAiB,oBAAoB;AACrC;AACA;AACA,KAAK;AACL;AACA;;AAEA,mBAAmB,+BAA+B;AAClD;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kCAAkC,QAAQ;AAC1C;AACA;AACA,KAAK;AACL;AACA;;AAEA,+CAA+C,QAAQ;AACvD;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;;AAGL,2CAA2C;;AAE3C,yDAAyD;;AAEzD;AACA;AACA;;AAEA,kBAAkB;AAClB;;AAEA,qCAAqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,0CAA0C;;AAE1C;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,SAAS;AACT,OAAO;;AAEP;;AAEA,wBAAwB;AACxB;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;;AAEA,gDAAgD,QAAQ;;AAExD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,+BAA+B,kBAAkB,cAAc,cAAc,kBAAkB,gBAAgB,uBAAuB,sBAAsB,sBAAsB,uBAAuB,kBAAkB,qBAAqB,gBAAgB,sBAAsB,iBAAiB,qBAAqB,kBAAkB,iBAAiB,cAAc,6BAA6B,gCAAgC,+BAA+B,cAAc,qBAAqB,aAAa,kBAAkB,0CAA0C,aAAa,kDAAkD,cAAc,uBAAuB,qBAAqB,YAAY,mBAAmB;AAC7sB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,qBAAqB;AACtC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAEc,2EAAY,EAAC;AAC5B;;;;;;;;;;;;;ACjcA;AAAA","file":"script.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/script.js\");\n","/**\r\n * Find first audio or video element before lyrics element. Only used when\r\n * no mediaElement was specified. If nothing found, return null.\r\n */\nfunction findMediaElement(element) {\n  if (element.dataset.media) {\n    var mediaElement = document.querySelector(element.dataset.media);\n    if (mediaElement) return mediaElement;\n  }\n\n  var previousElement = element.previousElementSibling; // First, lookup siblings before\n\n  while (previousElement) {\n    if (previousElement.tagName.toLowerCase() === 'audio' || previousElement.tagName.toLowerCase() === 'video') {\n      return previousElement;\n    } else {\n      var mediaChildren = previousElement.querySelectorAll('audio, video');\n\n      if (mediaChildren.length > 0) {\n        return mediaChildren.item(mediaChildren.length - 1);\n      }\n    }\n\n    previousElement = previousElement.previousElementSibling;\n  }\n\n  if (element.parentElement) {\n    return findMediaElement(element.parentElement);\n  } else {\n    return null;\n  }\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\n/** Parse timestamp and return number in seconds */\nfunction parseTimestamp(timestamp) {\n  if (!timestamp || typeof timestamp !== 'string') return 0;\n  var results; // [hh:mm:ss.xx] format, used by audio books\n\n  results = timestamp.match(/\\[(\\d+):(\\d+):(\\d+\\.\\d+)\\]/);\n\n  if (results && results.length === 4) {\n    return parseInt(results[1]) * 60 * 60 + parseInt(results[2]) * 60 + parseFloat(results[3]);\n  } // [mm:ss.xx] format, used for songs\n\n\n  results = timestamp.match(/\\[(\\d+):(\\d+\\.\\d+)\\]/);\n\n  if (results && results.length === 3) {\n    return parseInt(results[1]) * 60 + parseFloat(results[2]);\n  }\n\n  return 0;\n}\n\nvar timeRegex = /\\[(\\d+:)?\\d+:\\d+\\.\\d+\\]/;\nvar startRegex = /^\\[(\\d+:)?\\d+:\\d+\\.\\d+\\]/;\nvar endRegex = /\\[(\\d+:)?\\d+:\\d+\\.\\d+\\]$/;\nfunction parseLyrics(source) {\n  var lines = source.trim().split(/\\r\\n|\\n|\\r/).map(function (line) {\n    return line.trim();\n  });\n  var results = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var startMatch = line.match(startRegex);\n    var endMatch = line.match(endRegex); // Infinity will be replaced later by checking the context\n\n    var startsAt = startMatch ? parseTimestamp(startMatch[0]) : Infinity;\n    var endsAt = endMatch ? parseTimestamp(endMatch[0]) : Infinity;\n    var content = parseLyricsLine(line);\n    results.push({\n      startsAt: startsAt,\n      endsAt: endsAt,\n      content: content\n    });\n  }\n\n  fillMissingEndTimestamps(results);\n  fillMissingStartTimestamps(results);\n  return results;\n}\n\nfunction parseLyricsLine(source) {\n  var results = [];\n  var pointer = 0;\n  var lastTime = Infinity;\n\n  while (pointer < source.length) {\n    var match = source.substr(pointer).match(timeRegex);\n\n    if (match && match[0] && typeof match.index !== 'undefined') {\n      var time = parseTimestamp(match[0]);\n\n      if (match.index > 0) {\n        results.push({\n          startsAt: lastTime,\n          endsAt: time,\n          content: source.substr(pointer, match.index)\n        });\n      }\n\n      lastTime = time;\n      pointer += match.index + match[0].length;\n    } else {\n      results.push({\n        startsAt: lastTime,\n        endsAt: Infinity,\n        content: source.substr(pointer)\n      });\n      pointer = source.length;\n    }\n  }\n\n  return results;\n}\n\nfunction fillMissingStartTimestamps(results) {\n  var lastTime = Infinity;\n\n  for (var i = 0; i < results.length; i++) {\n    if (results[i].startsAt === Infinity) {\n      results[i].startsAt = lastTime;\n    } else {\n      lastTime = results[i].startsAt;\n    }\n\n    for (var j = 0; j < results[i].content.length; j++) {\n      if (results[i].content[j].startsAt === Infinity) {\n        results[i].content[j].startsAt = lastTime;\n      } else {\n        lastTime = results[i].content[j].startsAt;\n      }\n    }\n  }\n}\n\nfunction fillMissingEndTimestamps(results) {\n  var lastTime = Infinity;\n\n  for (var i = results.length - 1; i >= 0; i--) {\n    if (results[i].endsAt === Infinity) {\n      results[i].endsAt = lastTime;\n    } else {\n      lastTime = results[i].endsAt;\n    }\n\n    for (var j = results[i].content.length - 1; j >= 0; j--) {\n      if (results[i].content[j].endsAt === Infinity) {\n        results[i].content[j].endsAt = lastTime;\n      } else {\n        lastTime = results[i].content[j].endsAt;\n      }\n\n      if (results[i].content[j].startsAt !== Infinity) {\n        lastTime = results[i].content[j].startsAt;\n      }\n    }\n\n    if (results[i].startsAt !== Infinity) {\n      lastTime = results[i].startsAt;\n    }\n  }\n}\n\n/**\r\n * RabbitLyrics main controller.\r\n */\n\nvar RabbitLyrics = /*#__PURE__*/function () {\n  function RabbitLyrics(\n  /** Lyrics container element. Support data-* attributes for options. */\n  lyricsElement,\n  /** Audio or video element. Note: embeded media elements in <iframe> are not supported. */\n  mediaElement,\n  /** Lyrics options. */\n  options) {\n    var _this = this;\n\n    this.lyricsElement = lyricsElement;\n    this.mediaElement = mediaElement;\n    this.viewMode = 'clip';\n    this.alignment = 'center';\n    this.lyrics = '';\n    this.lyricsLines = [];\n\n    this.handleStatusChange = function (e) {\n      var status; // playing, paused, waiting, ended\n\n      switch (e.type) {\n        case 'play':\n        case 'playing':\n          status = 'playing';\n          break;\n\n        case 'pause':\n          status = 'paused';\n          break;\n\n        case 'waiting':\n          status = 'waiting';\n          break;\n\n        case 'ended':\n          status = 'ended';\n          break;\n      }\n\n      _this.lyricsElement.classList.remove('rabbit-lyrics--playing', 'rabbit-lyrics--paused', 'rabbit-lyrics--waiting', 'rabbit-lyrics--ended');\n\n      if (status) {\n        _this.lyricsElement.classList.add('rabbit-lyrics--' + status);\n      }\n    };\n    /**\r\n     * Synchronize media element time and lyrics lines\r\n     */\n\n\n    this.synchronize = function () {\n      var time = _this.mediaElement.currentTime;\n      var changed = false; // If here are active lines changed\n\n      var activeLines = _this.lyricsLines.filter(function (line) {\n        if (time >= line.startsAt && time < line.endsAt) {\n          // If line should be active\n          if (!line.element.classList.contains('rabbit-lyrics__line--active')) {\n            // If it hasn't been activated\n            changed = true;\n            line.element.classList.add('rabbit-lyrics__line--active');\n          }\n\n          line.content.forEach(function (inline) {\n            if (time >= inline.startsAt) {\n              inline.element.classList.add('rabbit-lyrics__inline--active');\n            } else {\n              inline.element.classList.remove('rabbit-lyrics__inline--active');\n            }\n          });\n          return true;\n        } else {\n          // If line should be inactive\n          if (line.element.classList.contains('rabbit-lyrics__line--active')) {\n            // If it hasn't been deactivated\n            changed = true;\n            line.element.classList.remove('rabbit-lyrics__line--active');\n            line.content.forEach(function (inline) {\n              inline.element.classList.remove('rabbit-lyrics__inline--active');\n            });\n          }\n\n          return false;\n        }\n      });\n\n      if (changed && activeLines.length > 0) {\n        // Calculate scroll top. Vertically align active lines in middle\n        var activeLinesOffsetTop = (activeLines[0].element.offsetTop + activeLines[activeLines.length - 1].element.offsetTop + activeLines[activeLines.length - 1].element.offsetHeight) / 2;\n        _this.lyricsElement.scrollTop = activeLinesOffsetTop - _this.lyricsElement.clientHeight / 2;\n      }\n    };\n\n    if (this.lyricsElement.rabbitLyrics) {\n      // Return existing instance to avoid duplicates\n      return this.lyricsElement.rabbitLyrics;\n    } // Bind new instance to lyrics element\n\n\n    this.lyricsElement.rabbitLyrics = this; // Merge element attribute options\n\n    Object.assign(this, this.getOptionsFromAttributes()); // Merge user specified options\n\n    if (options) {\n      Object.assign(this, options);\n    }\n\n    this.render(); // Bind this to event handlers\n    // Rest scroll bar\n\n    this.lyricsElement.scrollTop = 0; // Bind playback update events\n\n    this.mediaElement.addEventListener('timeupdate', this.synchronize);\n    this.mediaElement.addEventListener('play', this.handleStatusChange);\n    this.mediaElement.addEventListener('playing', this.handleStatusChange);\n    this.mediaElement.addEventListener('pause', this.handleStatusChange);\n    this.mediaElement.addEventListener('waiting', this.handleStatusChange);\n    this.mediaElement.addEventListener('ended', this.handleStatusChange);\n  }\n  /** Change lyrics content and re-render views */\n\n\n  var _proto = RabbitLyrics.prototype;\n\n  _proto.setLyrics = function setLyrics(lyrics) {\n    this.lyrics = lyrics;\n    this.render();\n  }\n  /** Change alignment */\n  ;\n\n  _proto.setAlignment = function setAlignment(alignment) {\n    this.alignment = alignment;\n    this.lyricsElement.classList.remove('rabbit-lyrics--center', 'rabbit-lyrics--left', 'rabbit-lyrics--right');\n    this.lyricsElement.classList.add('rabbit-lyrics--' + this.alignment);\n  }\n  /** Change alignment */\n  ;\n\n  _proto.setViewMode = function setViewMode(viewMode) {\n    this.viewMode = viewMode;\n    this.lyricsElement.classList.remove('rabbit-lyrics--clip', 'rabbit-lyrics--full', 'rabbit-lyrics--mini');\n    this.lyricsElement.classList.add('rabbit-lyrics--' + this.viewMode);\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    // Add class names\n    this.lyricsElement.classList.add('rabbit-lyrics');\n    this.lyricsElement.classList.add('rabbit-lyrics--' + this.viewMode);\n    this.lyricsElement.classList.add('rabbit-lyrics--' + this.alignment);\n    this.lyricsElement.textContent = null; // Render lyrics lines\n\n    this.lyricsLines = parseLyrics(this.lyrics).map(function (line) {\n      var lineElement = document.createElement('div');\n      lineElement.className = 'rabbit-lyrics__line';\n      lineElement.addEventListener('click', function () {\n        _this2.mediaElement.currentTime = line.startsAt;\n\n        _this2.synchronize();\n      });\n      var lineContent = line.content.map(function (inline) {\n        var inlineElement = document.createElement('span');\n        inlineElement.className = 'rabbit-lyrics__inline';\n        inlineElement.textContent = inline.content;\n        lineElement.append(inlineElement);\n        return _extends({}, inline, {\n          element: inlineElement\n        });\n      });\n\n      _this2.lyricsElement.append(lineElement);\n\n      return _extends({}, line, {\n        content: lineContent,\n        element: lineElement\n      });\n    });\n    this.synchronize();\n  };\n\n  _proto.getOptionsFromAttributes = function getOptionsFromAttributes() {\n    var _this$lyricsElement$t;\n\n    var options = {};\n\n    if ((_this$lyricsElement$t = this.lyricsElement.textContent) != null && _this$lyricsElement$t.trim()) {\n      options.lyrics = this.lyricsElement.textContent.trim();\n    }\n\n    if (this.lyricsElement.dataset.viewMode) {\n      options.viewMode = this.lyricsElement.dataset.viewMode;\n    }\n\n    if (this.lyricsElement.dataset.alignment) {\n      options.alignment = this.lyricsElement.dataset.alignment;\n    }\n\n    return options;\n  };\n\n  return RabbitLyrics;\n}();\n\nfunction styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css_248z = \".rabbit-lyrics{position:relative;padding:1em 0;height:16.5em;overflow-x:hidden;overflow-y:auto;scroll-behavior:smooth;background-color:#fff;border:1px solid #ddd}.rabbit-lyrics--center{text-align:center}.rabbit-lyrics--left{text-align:left}.rabbit-lyrics--right{text-align:right}.rabbit-lyrics__line{line-height:1.5em;min-height:1.5em;padding:0 1em}.rabbit-lyrics__line--active{background-color:rgba(0,0,0,.1)}.rabbit-lyrics__inline--active{color:#04a8a8}.rabbit-lyrics--mini{height:1.5em;overflow-y:hidden}.rabbit-lyrics--mini .rabbit-lyrics__line{display:none}.rabbit-lyrics--mini .rabbit-lyrics__line--active{display:block;background:transparent}.rabbit-lyrics--full{height:auto;overflow-y:initial}\";\nstyleInject(css_248z);\n\n/*\r\n * Rabbit Lyrics\r\n *\r\n * JavaScript audio and timed lyrics synchronizer. No jQuery required.\r\n *\r\n * License: GNU General Public License version 3\r\n * Author: Guo Yunhe <i@guoyunhe.com>\r\n * Repository: https://github.com/guoyunhe/rabbit-lyrics\r\n */\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  var elements = document.getElementsByClassName('rabbit-lyrics');\n\n  for (var i = 0; i < elements.length; i++) {\n    var lyricsElement = elements.item(i);\n\n    if (lyricsElement) {\n      var mediaElement = findMediaElement(lyricsElement);\n\n      if (mediaElement) {\n        new RabbitLyrics(lyricsElement, mediaElement);\n      }\n    }\n  }\n}, false);\n\nexport default RabbitLyrics;\n//# sourceMappingURL=rabbit-lyrics.esm.js.map\n","import \"rabbit-lyrics\";\n"],"sourceRoot":""}